import { FullLocaleData } from '../locale.types';

export default {
    abbr: 'pt-BR',
    exception: {
        403: `Desculpe, você não tem acesso a essa página`,
        404: `Desculpe, a página que está tentando acessar não existe.`,
        500: `Desculpe, o servidor retornou um erro.`,
        backToHome: 'Voltar ao Inicio',
    },
    noticeIcon: {
        emptyText: 'Não há informações.',
        clearText: 'Limpar',
    },
    reuseTab: {
        close: 'Fechar Aba',
        closeOther: 'Fechar outras abas',
        closeRight: 'Fechar abas a direita',
        refresh: 'Recarregar',
    },
    tagSelect: {
        expand: 'Expandir',
        collapse: 'Recolher',
    },
    miniProgress: {
        target: 'Objetivo: ',
    },
    st: {
        total: '{{range[0]}} - {{range[1]}} de {{total}}',
        filterConfirm: 'OK',
        filterReset: 'Resetar',
    },
    sf: {
        submit: 'Enviar',
        reset: 'Resetar',
        search: 'Buscar',
        edit: 'Salvar',
        addText: 'Adcionar',
        removeText: 'Remover',
        checkAllText: 'Checar todos',
        error: {
            'false schema': `O esquema booleano é falso`,
            $ref: `Não é possivel resolver a referência {ref}`,
            additionalItems: `Não deve ter mais que {limit} item`,
            additionalProperties: `Não deve ter propriedades adcionais`,
            anyOf: `Deve corresponder a algum esquema em "anyOf"`,
            dependencies: `Deve ter a propriedade {deps} quando a propriedade {property} é presente`,
            enum: `Deve ser igual a um dos valores predefinidos`,
            format: `Deve corresponder ao formato "{format}"`,
            type: `Deve estar {type}`,
            required: `Requerido`,
            maxLength: `Não deve ser maior que {limit} caracteres`,
            minLength: `Não deve ser menor que {limit} caracteres`,
            minimum: `Deveria estar {comparison} {limit}`,
            formatMinimum: `Deveria estar {comparison} {limit}`,
            maximum: `Deveria estar {comparison} {limit}`,
            formatMaximum: `Deveria estar {comparison} {limit}`,
            maxItems: `Não deve ter mais que {limit} item`,
            minItems: `Não deve ter menor que {limit} item`,
            maxProperties: `Não deve ter mais que {limit} propriedade`,
            minProperties: `Não deve ter menos que {limit} propriedade`,
            multipleOf: `Deve ser multiplo de {multipleOf}`,
            not: `Não deve ser válido de acordo com o esquema em "not"`,
            oneOf: `Deve corresponder exatamente com o esquema em "oneOf"`,
            pattern: `Deve corresponder ao padrão "{pattern}"`,
            uniqueItems: `Não deve ter itens duplicados (items ## {j} em {i} são idênticos)`,
            custom: `Deve corresponder ao formato`,
            propertyNames: `Nome da propriedade "{propertyName}" é inválido`,
            patternRequired: `Deve ter padrão de correspondência de propriedade "{missingPattern}"`,
            switch: `Deve passar na validação da palavra-chave "switch", caso {caseIndex} falhar`,
            const: `Deveria estar igual a constante`,
            contains: `Deve conter um item válido`,
            formatExclusiveMaximum: `formatExclusiveMaximum Deveria estar boolean`,
            formatExclusiveMinimum: `formatExclusiveMinimum Deveria estar boolean`,
            if: `Deve combinar "{failingKeyword}" esquema`,
        },
    },
    onboarding: {
        skip: `Pular`,
        prev: `Anterior`,
        next: `Proximo`,
        done: `Ultimo`,
    },
} as FullLocaleData;
